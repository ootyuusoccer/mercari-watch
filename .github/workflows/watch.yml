name: Mercari Watch

on:
  schedule:
    - cron: "*/15 * * * *"  # 15分ごとに実行
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          npm install playwright@1.44.0 node-fetch@3.3.2
          
      - name: Install Playwright (browsers)
        run: |
          npm i -D playwright
          npx playwright install --with-deps chromium
          
      - name: Run Mercari Watcher
        run: |
          node <<'EOF'
          import fs from 'fs';
          import fetch from 'node-fetch';
          import { chromium } from 'playwright';

          const targets = fs.readFileSync('targets.csv', 'utf8')
            .trim().split('\n').slice(1)
            .map(line => {
              const [name, url, max_price] = line.split(',');
              return { name, url, max_price: parseInt(max_price, 10) };
            });

          const lastSeen = fs.existsSync('last_seen.json')
            ? JSON.parse(fs.readFileSync('last_seen.json', 'utf8'))
            : {};

          const browser = await chromium.launch({ headless: true });
          const page = await browser.newPage();

          for (const target of targets) {
            console.log(`Checking ${target.name}...`);
            await page.goto(target.url, { waitUntil: 'domcontentloaded' });

            // ページから最初の商品情報を抽出
            const items = await page.evaluate(() => {
              const scripts = Array.from(document.querySelectorAll('script'))
                .find(s => s.textContent.includes('"items"'));
              if (!scripts) return [];
              const match = scripts.textContent.match(/"items":(\[.*?\])[,}]/);
              return match ? JSON.parse(match[1]) : [];
            });

            if (items.length === 0) continue;
            const latest = items[0];
            const id = latest.id;
            const price = latest.price;

            if (lastSeen[target.name] !== id && price <= target.max_price) {
              console.log(`✅ New item found: ${target.name} (${price}円)`);
              lastSeen[target.name] = id;
            }
          }

          fs.writeFileSync('last_seen.json', JSON.stringify(lastSeen, null, 2));
          await browser.close();
          EOF
