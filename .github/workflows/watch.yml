name: Mercari Watch

on:
  schedule:
    - cron: "*/15 * * * *"  # 15分ごとに実行
  workflow_dispatch:

permissions:
  contents: write

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          npm install playwright@1.44.0 node-fetch@3.3.2
          npx playwright install --with-deps chromium

      - name: Run Mercari Watcher
        run: |
          node <<'EOF'
          import fs from 'fs';
          import fetch from 'node-fetch';
          import { chromium } from 'playwright';

          const targets = fs.readFileSync('targets.csv', 'utf8')
            .trim().split('\n').slice(1)
            .map(line => {
              const [name, url, max_price] = line.split(',');
              return { name, url, max_price: parseInt(max_price, 10) };
            });

          const lastSeenPath = 'last_seen.json';
          const lastSeen = fs.existsSync(lastSeenPath)
            ? JSON.parse(fs.readFileSync(lastSeenPath, 'utf8'))
            : {};

          const browser = await chromium.launch({ headless: true });
          const page = await browser.newPage();

          let newItems = [];

          for (const t of targets) {
            console.log(`🔍 Checking: ${t.name}`);
            await page.goto(t.url, { waitUntil: 'domcontentloaded', timeout: 60000 });
            const ids = await page.$$eval('[data-testid="item-cell"] a', as => as.map(a => a.href.split('/').pop()));

            if (!ids.length) {
              console.log(`⚠️ ${t.name}: 出品が見つかりません`);
              continue;
            }

            if (lastSeen[t.name] && lastSeen[t.name] !== ids[0]) {
              console.log(`🆕 ${t.name}: 新しい出品を検出！`);
              newItems.push(`${t.name}: https://jp.mercari.com/item/${ids[0]}`);
            }

            lastSeen[t.name] = ids[0];
          }

          await browser.close();
          fs.writeFileSync(lastSeenPath, JSON.stringify(lastSeen, null, 2));

          if (newItems.length) {
            fs.writeFileSync('new_items.txt', newItems.join('\n'));
          }

          console.log("✅ Watch 完了");
          EOF

      - name: Commit last_seen.json
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          if git status --porcelain | grep -q "last_seen.json"; then
            git add last_seen.json
            git commit -m "chore: update last_seen.json"
            git push
          fi

      - name: Send Gmail notification
        if: success()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "【Mercari】新しい出品がありました"
          to: youraddress@gmail.com
          from: Mercari Watcher <youraddress@gmail.com>
          body: |
            以下の新しい出品が検出されました：

            ${{ steps.run.outputs.new_items }}
